Ext.define('Senchaslide.view.Asociaciones', {
    extend: 'Ext.Panel',   
    id: 'viewAsociaciones',
    
    config: {
        cls: 'asociaciones',        
        scrollable: true,
        html: [
            '<div>', 
            '<p>Los modelos pueden ser enlazados entre ellos con la API de asociaciones. Muchas aplicaciones tratan con muy variados modelos, y los modelos ',
            'siempre están relacionados entre sí. Estas relaciones pueden expresarse de la siguiente forma: ',                       
            '<pre class="prettyprint lang-javascript">',
            'Ext.define(\'User\', {<br />',
            '   extend: \'Ext.data.Model\',<br />',
            '   fields: [\'id\', \'name\', \'age\', \'gender\'],<br />',
            '   proxy: {<br />',
            '       type: \'rest\',<br />',
            '       url: \'data/users\',<br />',
            '       reader: {<br />',
            '           type: \'json\',<br />',
            '           root: \'users\'<br />',
            '       }<br />',
            '   },<br />',
            '<br />',
            '   hasMany: \'Post\' // shorthand de { model: \'Post\', name: \'post\' }<br />',
            '});<br />',
            '<br />',            
            'Ext.define(\'Post\', {<br />',
            '   extend: \'Ext.data.Model\',<br />',
            '   fields: [\'id\', \'user_id\', \'title\', \'body\'],<br />',
            '<br />',
            '   proxy: {<br />',
            '       type: \'rest\',<br />',
            '       url: \'data/posts\',<br />',
            '       reader: {<br />',
            '           type: \'json\',<br />',
            '           root: \'post\'<br />',
            '       }<br />',
            '   },<br />',
            '   belongsTo: \'User\',<br />',
            '   hasMany: {model: \'Comment\', name: \'comments\'}<br />',
            '});<br />',
            '<br />',
            'Ext.define(\'Comment\', {<br />',
            '   extend: \'Ext.data.Model\',<br />',
            '   fields: [\'id\', \'post_id\', \'name\', \'message\'],<br />',
            '<br />',
            '   belongsTo: \'Post\'<br />',
            '});',
            '</pre></p>',         
            '<p>De esta forma es muy sencillo expresar relaciones complejaas entre diferentes modelos an nuestras aplicaciones.</p>',
            '<pre class="prettyprint lang-javascript">',
            '// Loads User with ID 1 and related posts and comments using User\'s Proxy<br />',
            'User.load(1, {<br />',
            '    success: function(user) {<br />',
            '        console.log("User: " + user.get(\'name\'));<br />',
            '<br />',            
            '       user.posts().each(function(post) {<br />',
            '            console.log("Comments for post: " + post.get(\'title\'));<br />',
            '<br />',
            '            post.comments().each(function(comment) {<br />',
            '                console.log(comment.get(\'message\'));<br />',
            '            });<br />',
            '        });<br />',
            '    }<br />',
            '});<br />',
            '</pre>',
            '<p>Cuando Sencha Touch encuentra una asociación del tipo <code>hasMany</code> añade un método que devuelve un Store configurado y listo para usarse ',
            'para recuperar una colección de modelos de la relación correspondiente, en este caso podríamos usar <code>user.posts()</code> por ejemplo.</p>',
            '<p>Con la asociaciones también podemos crear datos y no solo cargarlos.</p>',
            '<pre class="prettyprint lang-javascript">',
            'user.posts().add({<br />',
            '   title: \'Ext JS 4.0 MVC Architecture\',<br />',
            '   body: [\'It\\\'s a great Idea to structure your Ext JS Applications \',<br />',
            '       \'using the built in MVC Architecture...\'<br />',
            '   ].join("")<br />',
            '})<br />',
            '<br />',
            'user.posts().sync();<br />',
            '</pre>',
            '</div>'
        ].join("")
    }
});